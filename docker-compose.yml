volumes:
  timeseries_data:
    driver: local

services:
  # PostgreSQL database for ADK DatabaseSessionService
  adk_db:
    image: postgres:17
    container_name: adk_db
    environment:
      POSTGRES_USER: adk_user
      POSTGRES_PASSWORD: my-password
      POSTGRES_DB: adk_db
    # ports:
    #   - "9432:5432"
    volumes:
      - timeseries_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U adk_user -d adk_db" ]
      interval: 10s
      timeout: 5s

      retries: 5

  # Redis for ADK (optional, for caching and pub/sub)
  # adk-redis:
    # image: redis:7-alpine
    # ports:
    #   - "6379:6379"
    # healthcheck:
    #   test: redis-cli ping
    #   start_period: 10s
    #   timeout: 1s
    #   retries: 5
    #   interval: 5s

  # FastAPI Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: solar_backend
    ports:
      - "8000:8000"
    depends_on:
      adk_db:
        condition: service_healthy
    env_file:
      - .env.docker  # Optional local overrides (gitignored)
    environment:
      - DATABASE_URL=postgresql://adk_user:my-password@adk_db:5432/adk_db
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:4200", "http://localhost:5173", "http://frontend:4200"]
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_METHODS=["*"]
      - CORS_ALLOW_HEADERS=["*"]
      # Add your Gemini API key here for Docker
      # - GEMINI_API_KEY=your-gemini-api-key-here
    volumes:
      - ./backend:/app
    command: uv run uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Angular Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: solar_frontend
    ports:
      - "4200:4200"
    environment:
      - BACKEND_URL=http://backend:8000
      - API_URL=http://backend:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start -- --host 0.0.0.0 --port 4200 --disable-host-check
    depends_on:
      - backend
